### -------------------------------------------------- ###
#   Namespace                                            #
### -------------------------------------------------- ###

# Vulcan Application Namespace
---
kind: Namespace
apiVersion: v1
metadata:
  name: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes





### -------------------------------------------------- ###
#   Volumes                                              #
### -------------------------------------------------- ###

# Logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vulcan-logs-volume
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/vulcan-data/kubernetes/logs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vulcan-logs-pvc
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi





### -------------------------------------------------- ###
#   Vulcan Application                                   #
### -------------------------------------------------- ###

# Vulcan Backend
---
apiVersion: v1
kind: Service
metadata:
  name: vulcan
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 443
      targetPort: 443
      nodePort: 32100
  selector:
    tags.datadoghq.com/service: vulcan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan
      annotations:
        ad.datadoghq.com/vulcan.logs: '[{"type":"file","source":"vulcan-app","service":"vulcan","path":"/vulcan-data/logs/vulcan.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: vulcan
          image: maven:3.9-eclipse-temurin-17
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan
            - name: DD_VERSION
              value: "1.3.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: DD_DATA_STREAMS_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/certificate
            - name: VLCN_SESSION_KEY
              valueFrom:
                secretKeyRef:
                  name: vulcan-secrets
                  key: SESSION_KEY
            - name: PW_PEPPER
              valueFrom:
                secretKeyRef:
                  name: vulcan-secrets
                  key: PASSWORD_PEPPER
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# User-Manager
---
apiVersion: v1
kind: Service
metadata:
  name: user-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: user-manager
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: user-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: user-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: user-manager
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: user-manager
      annotations:
        ad.datadoghq.com/user-manager.logs: '[{"type":"file","source":"vulcan-app","service":"user-manager","path":"/vulcan-data/logs/user-manager.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: user-manager
          image: node:18
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: user-manager
            - name: DD_VERSION
              value: "1.3.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /user-manager/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# God-Manager
---
apiVersion: v1
kind: Service
metadata:
  name: god-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: god-manager
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: god-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: god-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: god-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: god-manager
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: god-manager
      annotations:
        ad.datadoghq.com/god-manager.logs: '[{"type":"file","source":"vulcan-app","service":"god-manager","path":"/vulcan-data/logs/god-manager.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: god-manager
          image: golang:latest
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: god-manager
            - name: DD_VERSION
              value: "1.0.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_PROFILING_EXECUTION_TRACE_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /god-manager/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"





### -------------------------------------------------- ###
#   Supporting Infrastructure                            #
### -------------------------------------------------- ###

# Authenticator
---
apiVersion: v1
kind: Service
metadata:
  name: authenticator
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: authenticator
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: authenticator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authenticator
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: authenticator
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: authenticator
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: authenticator
      annotations:
        ad.datadoghq.com/authenticator.logs: '[{"type":"file","source":"vulcan-app","service":"authenticator","path":"/vulcan-data/logs/auth.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: authenticator
          image: python:bookworm
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: authenticator
            - name: DD_VERSION
              value: "1.2.1"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /authenticator/certificate
            - name: PW_PEPPER
              valueFrom: 
                secretKeyRef: 
                  name: vulcan-secrets
                  key: PASSWORD_PEPPER
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"