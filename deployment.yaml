### -------------------------------------------------- ###
#   Namespace                                            #
### -------------------------------------------------- ###

# Vulcan Lang
---
kind: Namespace
apiVersion: v1
metadata:
  name: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes





### -------------------------------------------------- ###
#   Volumes                                              #
### -------------------------------------------------- ###

# Logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vulcan-logs-volume
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/vulcan-data/kubernetes/logs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vulcan-logs-pvc
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi





### -------------------------------------------------- ###
#   Web Apps                                             #
### -------------------------------------------------- ###

# Golang
---
apiVersion: v1
kind: Service
metadata:
  name: vesuvius
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vesuvius
spec:
  type: LoadBalancer
  ports:
    - port: 14430
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vesuvius
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vesuvius
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vesuvius
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vesuvius
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vesuvius
      annotations:
        ad.datadoghq.com/vesuvius.logs: '[{"type":"file","source":"vulcan-app","service":"vesuvius","path":"/vulcan-data/kubernetes/logs/golang.log"}]'
        ad.datadoghq.com/tags: '{"team":"john"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: vesuvius
          image: golang:latest
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - mountPath: /logs
              name: logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vesuvius
            - name: DD_VERSION
              value: "1.2.0"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
#            - name: DD_AGENT_HOST
#              value: datadog-agent
#            - name: DD_TRACE_AGENT_PORT
#              value: "8126"
            - name: DD_TRACE_AGENT_URL
              value: 'unix:///var/run/datadog/apm.socket'
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: VLCN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
            - name: VLCN_CERT_FOLDER
              value: /vulcan/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# JavaScript
---
apiVersion: v1
kind: Service
metadata:
  name: vulcan-js
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-js
spec:
  type: LoadBalancer
  ports:
    - port: 14431
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vulcan-js
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan-js
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-js
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan-js
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan-js
      annotations:
        ad.datadoghq.com/vulcan-js.logs: '[{"type":"file","source":"vulcan-app","service":"vulcan-js","path":"/vulcan-data/kubernetes/logs/node.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: vulcan-js
          image: node:18
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - mountPath: /logs
              name: logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan-js
            - name: DD_VERSION
              value: "1.2.0"
            - name: DD_IAST_ENABLED
              value: "true"
#            - name: DD_AGENT_HOST
#              value: datadog-agent
#            - name: DD_TRACE_AGENT_PORT
#              value: "8126"
            - name: DD_TRACE_AGENT_URL
              value: 'unix:///var/run/datadog/apm.socket'
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: VLCN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
            - name: VLCN_CERT_FOLDER
              value: /vulcan/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# Java
---
apiVersion: v1
kind: Service
metadata:
  name: vulcan-java
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-java
spec:
  type: LoadBalancer
  ports:
    - port: 14432
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vulcan-java
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan-java
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-java
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan-java
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan-java
      annotations:
        ad.datadoghq.com/vulcan-java.logs: '[{"type":"file","source":"vulcan-app","service":"vulcan-java","path":"/vulcan-data/kubernetes/logs/java.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: vulcan-java
          image: maven:3.9-eclipse-temurin-17
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - mountPath: /logs
              name: logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan-java
            - name: DD_VERSION
              value: "1.2.1"
#            - name: DD_AGENT_HOST
#              value: datadog-agent
#            - name: DD_TRACE_AGENT_PORT
#              value: "8126"
            - name: DD_TRACE_AGENT_URL
              value: 'unix:///var/run/datadog/apm.socket'
            - name: VLCN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
            - name: VLCN_CERT_FOLDER
              value: /vulcan/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"





### -------------------------------------------------- ###
#   Supporting Infrastructure                            #
### -------------------------------------------------- ###

# Authenticator
---
apiVersion: v1
kind: Service
metadata:
  name: authenticator
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: authenticator
spec:
  type: LoadBalancer
  ports:
    - port: 12884
      targetPort: 2884
  selector:
    tags.datadoghq.com/service: authenticator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authenticator
  #namespace: vulcan-lang
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: authenticator
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: authenticator
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: authenticator
      annotations:
        ad.datadoghq.com/authenticator.logs: '[{"type":"file","source":"vulcan-app","service":"authenticator","path":"/vulcan-data/kubernetes/logs/auth.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: vulcan-logs-pvc
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: authenticator
          image: maven:3.9-eclipse-temurin-17
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | bash -s"]
          volumeMounts:
            - mountPath: /logs
              name: logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: authenticator
            - name: DD_VERSION
              value: "1.2.1"
#            - name: DD_AGENT_HOST
#              value: datadog-agent
#            - name: DD_TRACE_AGENT_PORT
#              value: "8126"
            - name: DD_TRACE_AGENT_URL
              value: 'unix:///var/run/datadog/apm.socket'
            - name: VLCN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
            - name: VLCN_CERT_FOLDER
              value: /vulcan/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"