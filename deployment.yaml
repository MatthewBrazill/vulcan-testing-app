# Golang
---
apiVersion: v1
kind: Service
metadata:
  name: go-load-balancer
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-go
spec:
  type: LoadBalancer
  ports:
    - port: 14430
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vulcan-go
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan-go
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-go
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan-go
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan-go
    spec:
      containers:
        - name: vulcan-go
          image: golang:latest
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/startup.sh | bash -s"]
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan-go
            - name: DD_VERSION
              value: "1.2.0"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_AGENT_HOST
              value: datadog-agent
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: VULCAN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"

# JavaScript
---
apiVersion: v1
kind: Service
metadata:
  name: js-load-balancer
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-js
spec:
  type: LoadBalancer
  ports:
    - port: 14431
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vulcan-js
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan-js
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-js
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan-js
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan-js
    spec:
      containers:
        - name: vulcan-js
          image: node:18
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/startup.sh | bash -s"]
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan-js
            - name: DD_VERSION
              value: "1.2.0"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_AGENT_HOST
              value: datadog-agent
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: VULCAN_SESSION_KEY
              value: ArcetMuxHCFXM4FZYoHPYuizo-*u!ba*
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"

# Java
---
apiVersion: v1
kind: Service
metadata:
  name: java-load-balancer
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-java
spec:
  type: LoadBalancer
  ports:
    - port: 14432
      targetPort: 443
  selector:
    tags.datadoghq.com/service: vulcan-java
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan-java
  labels:
    tags.datadoghq.com/env: kubernetes
    tags.datadoghq.com/service: vulcan-java
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan-java
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: kubernetes
        tags.datadoghq.com/service: vulcan-java
    spec:
      containers:
        - name: vulcan-java
          image: maven:3.9-eclipse-temurin-17
          command: ["/bin/sh"]
          args: ["-c", "curl -s https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/startup.sh | bash -s"]
          env:
            - name: DD_ENV
              value: kubernetes
            - name: DD_SERVICE
              value: vulcan-java
            - name: DD_VERSION
              value: "1.2.1"
            - name: DD_AGENT_HOST
              value: datadog-agent
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
