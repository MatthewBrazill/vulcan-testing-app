### -------------------------------------------------- ###
#   Namespace                                            #
### -------------------------------------------------- ###

# Vulcan Application Namespace
---
kind: Namespace
apiVersion: v1
metadata:
  name: vulcan-application
  labels:
    tags.datadoghq.com/env: dev





### -------------------------------------------------- ###
#   Secrets                                              #
### -------------------------------------------------- ###

# Vulcan Secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: vulcan-secrets
  namespace: vulcan-application
type: generic
stringData:
  PASSWORD_PEPPER: <password-pepper>
  SESSION_KEY: <session-key>





### -------------------------------------------------- ###
#   Volumes                                              #
### -------------------------------------------------- ###

# Logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vulcan-logs-volume
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/vulcan-data/kubernetes/logs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vulcan-logs-pvc
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi





### -------------------------------------------------- ###
#   Vulcan Application                                   #
### -------------------------------------------------- ###

# Vulcan Backend
---
apiVersion: v1
kind: Service
metadata:
  name: vulcan
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: vulcan
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - port: 443
      targetPort: 443
      nodePort: 32100
  selector:
    tags.datadoghq.com/service: vulcan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulcan
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: vulcan
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: vulcan
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: vulcan
      annotations:
        ad.datadoghq.com/init-vulcan.logs: '[{"source":"startup-script","service":"vulcan"}]'
        ad.datadoghq.com/vulcan.logs: '[{"type":"file","source":"vulcan-app","service":"vulcan","path":"/vulcan-data/logs/vulcan.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
        - name: workdir
          emptyDir: {}
      initContainers:
        - name: init-vulcan
          image: maven:3.9-eclipse-temurin-17
          command: ["/bin/sh"]
          args: ["-c", "wget -nv -O - https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | sh -s"]
          volumeMounts:
            - name: workdir
              mountPath: /vulcan
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: vulcan
      containers:
        - name: vulcan
          image: maven:3.9-eclipse-temurin-17
          command: ["java"]
          args:
            - "-javaagent:/vulcan/services/vulcan/dd-java-agent.jar"
            - "-Djavax.net.ssl.trustStore=/vulcan/services/vulcan/cacert"
            - "-Dlog4j2.configurationFile=/vulcan/services/vulcan/src/log4j2.xml"
            - "-Dvulcan.session.key=$VLCN_SESSION_KEY"
            - "-jar"
            - "/vulcan/services/vulcan/target/vulcan.jar"
            - "--logging.config=/vulcan/services/vulcan/src/log4j2.xml"
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
            - name: workdir
              mountPath: /vulcan
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: vulcan
            - name: DD_VERSION
              value: "1.3.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_DBM_PROPAGATION_MODE
              value: "full"
            - name: DD_SERVICE_MAPPING
              value: "redis:session-store,postgresql:user-database,mongo:god-database,kafka:notes-queue"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_DYNAMIC_INSTRUMENTATION_ENABLED
              value: "true"
            - name: DD_SYMBOL_DATABASE_UPLOAD_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: DD_DATA_STREAMS_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/services/vulcan/certificate
            - name: VLCN_SESSION_KEY
              valueFrom:
                secretKeyRef:
                  name: vulcan-secrets
                  key: SESSION_KEY
            - name: PW_PEPPER
              valueFrom:
                secretKeyRef:
                  name: vulcan-secrets
                  key: PASSWORD_PEPPER
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# User-Manager
---
apiVersion: v1
kind: Service
metadata:
  name: user-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: user-manager
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: user-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: user-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: user-manager
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: user-manager
      annotations:
        ad.datadoghq.com/user-manager.logs: '[{"type":"file","source":"vulcan-app","service":"user-manager","path":"/vulcan-data/logs/user-manager.log"},{"source":"startup-script","service":"user-manager"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: user-manager
          image: node:18
          command: ["/bin/sh"]
          args: ["-c", "wget -nv -O - https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | sh -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: user-manager
            - name: DD_VERSION
              value: "1.3.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_DBM_PROPAGATION_MODE
              value: "full"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_DYNAMIC_INSTRUMENTATION_ENABLED
              value: "true"
            - name: DD_SYMBOL_DATABASE_UPLOAD_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/services/user-manager/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# God-Manager
---
apiVersion: v1
kind: Service
metadata:
  name: god-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: god-manager
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: god-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: god-manager
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: god-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: god-manager
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: god-manager
      annotations:
        ad.datadoghq.com/init-god-manager.logs: '[{"source":"startup-script","service":"god-manager"}]'
        ad.datadoghq.com/god-manager.logs: '[{"type":"file","source":"vulcan-app","service":"god-manager","path":"/vulcan-data/logs/god-manager.log"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
        - name: workdir
          emptyDir: {}
      initContainers:
        - name: init-god-manager
          image: golang:latest
          command: ["/bin/sh"]
          args: ["-c", "wget -nv -O - https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | sh -s"]
          volumeMounts:
            - name: workdir
              mountPath: /vulcan
          env:
            - name: DD_SERVICE
              value: god-manager
      containers:
        - name: god-manager
          image: golang:latest
          command: ["/vulcan/services/god-manager/build/god-manager"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
            - name: workdir
              mountPath: /vulcan
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: god-manager
            - name: DD_VERSION
              value: "1.0.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_DBM_PROPAGATION_MODE
              value: "full"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_PROFILING_EXECUTION_TRACE_ENABLED
              value: "true"
            - name: DD_DYNAMIC_INSTRUMENTATION_ENABLED
              value: "true"
            - name: DD_SYMBOL_DATABASE_UPLOAD_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/services/god-manager/certificate
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"





### -------------------------------------------------- ###
#   Supporting Infrastructure                            #
### -------------------------------------------------- ###

# Authenticator
---
apiVersion: v1
kind: Service
metadata:
  name: authenticator
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: authenticator
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: authenticator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authenticator
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: authenticator
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: authenticator
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: authenticator
      annotations:
        ad.datadoghq.com/authenticator.logs: '[{"type":"file","source":"vulcan-app","service":"authenticator","path":"/vulcan-data/logs/auth.log"},{"source":"startup-script","service":"authenticator"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: authenticator
          image: python:3.12-alpine
          command: ["/bin/sh"]
          args: ["-c", "wget -nv -O - https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | sh -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: authenticator
            - name: DD_VERSION
              value: "1.2.1"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_DBM_PROPAGATION_MODE
              value: "full"
            - name: DD_SERVICE_MAPPING
              value: "mongo:god-database"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_DYNAMIC_INSTRUMENTATION_ENABLED
              value: "true"
            - name: DD_SYMBOL_DATABASE_UPLOAD_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/services/authenticator/certificate
            - name: PW_PEPPER
              valueFrom: 
                secretKeyRef: 
                  name: vulcan-secrets
                  key: PASSWORD_PEPPER
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# Scribe
---
apiVersion: v1
kind: Service
metadata:
  name: scribe
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: scribe
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    tags.datadoghq.com/service: scribe
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scribe
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: scribe
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: scribe
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: scribe
      annotations:
        ad.datadoghq.com/scribe.logs: '[{"type":"file","source":"vulcan-app","service":"scribe","path":"/vulcan-data/logs/scribe.log"},{"source":"startup-script","service":"scribe"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: scribe
          image: node:18
          command: ["/bin/sh"]
          args: ["-c", "wget -nv -O - https://raw.githubusercontent.com/MatthewBrazill/vulcan-testing-app/main/build-scripts/startup.sh | sh -s"]
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: scribe
            - name: DD_VERSION
              value: "0.1.0"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_DBM_PROPAGATION_MODE
              value: "full"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_DYNAMIC_INSTRUMENTATION_ENABLED
              value: "true"
            - name: DD_SYMBOL_DATABASE_UPLOAD_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: "unix:///var/run/datadog/apm.socket"
            - name: DD_DOGSTATSD_URL
              value: "unix:///var/run/datadog/dsd.socket"
            - name: DD_TRACE_CLIENT_IP_ENABLED
              value: "true"
            - name: DD_DATA_STREAMS_ENABLED
              value: "true"
            - name: CERT_FOLDER
              value: /vulcan/services/scribe/certificate
            - name: KAFKA_BROKER
              value: "notes-queue.vulcan-application.svc.cluster.local:9092"
            - name: KAFKA_CLIENT_ID
              value: "kube-scribe"
          ports:
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"


# Kafka Queue
---
apiVersion: v1
kind: Service
metadata:
  name: notes-queue
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: notes-queue
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: "external"
      port: 29092
      targetPort: 29092
      nodePort: 32200
    - name: "internal"
      port: 9092
      targetPort: 9092
  selector:
    tags.datadoghq.com/service: notes-queue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notes-queue
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: notes-queue
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: notes-queue
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: notes-queue
      annotations:
        ad.datadoghq.com/notes-queue.logs: '[{"source":"kafka","service":"notes-queue","log_processing_rules":[{"type":"multi_line","name":"log_date_start","pattern":"\\[\\d{4}-(0[1-9]|1[012])-([012][0-9]|3[01]) ([01][1-9]|2[0123]):([012345][0-9]):([012345][0-9]),\\d{3}\\]"}]}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: notes-queue
          image: apache/kafka:latest
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              value: dev
            - name: DD_SERVICE
              value: notes-queue
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_BROKER_ID
              value: "0001"
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "DOCKER://pupkube:32200,KUBERNETES://notes-queue.vulcan-application.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,KUBERNETES:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "DOCKER://0.0.0.0:29092,KUBERNETES://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "KUBERNETES"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          ports:
            - containerPort: 29092
              protocol: TCP
            - containerPort: 9092
              protocol: TCP
          resources:
            limits:
              memory: "1G"
              cpu: "0.4"





### -------------------------------------------------- ###
#   Data Storage                                         #
### -------------------------------------------------- ###

# Session Store
---
apiVersion: v1
kind: Service
metadata:
  name: session-store
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: session-store
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    tags.datadoghq.com/service: session-store
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-store
  namespace: vulcan-application
  labels:
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: session-store
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: session-store
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: session-store
      annotations:
        ad.datadoghq.com/redisdb.checks: '{"redisdb":{"instances":[{"host":"session-store","port":"6379","password":""}]}}'
        ad.datadoghq.com/session-store.logs: '[{"source":"redis","service":"session-store"}]'
        ad.datadoghq.com/tags: '{"team":"matthew"}'
    spec:
      volumes:
        - name: logs
          hostPath:
            path: /vulcan-data/logs/
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: session-store
          image: redis/redis-stack-server:latest
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: apmsocketpath
              mountPath: /var/run/datadog
          ports:
            - containerPort: 6379
              protocol: TCP
          resources:
            limits:
              memory: "1G"
              cpu: "0.2"